<project xmlns="http://maven.apache.org/POM/4.0.0"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- model version - always 4.0.0 for Maven 2.x POMs -->
  <modelVersion>4.0.0</modelVersion>


    <!-- project coordinates - values which uniquely identify this project -->

  <groupId>edu.ucsb.cs56.pconrad</groupId>
  <artifactId>smart_planner</artifactId>
  <version>1.0</version>
  <url>https://ucsb-cs56-webapp.github.io/ucsb-cs56-smartplanner</url>

  <!-- configure what mvn package produces -->

  <packaging>jar</packaging>
  <name>smart_planner</name>

  <!-- what version of Java should we use and what encoding for files? -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
		<userDefinedMainClass>edu.ucsb.cs56.pconrad.MainClass</userDefinedMainClass>
		<userDefinedHerokuApp>TBD</userDefinedHerokuApp>
  </properties>

	<!-- what other software does our project depend on (third-party JARs, etc.) -->
  <dependencies>


    <!-- https://mvnrepository.com/artifact/com.sparkjava/spark-template-mustache -->
    <dependency>
      <groupId>com.sparkjava</groupId>
      <artifactId>spark-template-mustache</artifactId>
      <version>2.7.1</version>
    </dependency>

    <!-- log4j -->

    <dependency>
       <groupId>org.slf4j</groupId>
       <artifactId>slf4j-api</artifactId>
       <version>1.7.5</version>
   </dependency>
   <dependency>
       <groupId>org.slf4j</groupId>
       <artifactId>slf4j-log4j12</artifactId>
       <version>1.7.5</version>
  </dependency>

    <!-- JUnit unit testing (https://junit.org/) -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>

    <!-- Spark Java Web framework (http://sparkjava.com/) -->
    <dependency>
      <groupId>com.sparkjava</groupId>
      <artifactId>spark-core</artifactId>
      <version>2.5</version>
    </dependency>

<!-- add the following google api dependency in your pom.xml, so that mavon knowns where the apis you are going to use are from and it will fetch them for you! -->
		<dependency>
  		<groupId>com.google.api-client</groupId>
  		<artifactId>google-api-client</artifactId>
  		<version>1.24.1</version>
		</dependency>

		<dependency>
		  <groupId>com.google.apis</groupId>
		    <artifactId>google-api-services-calendar</artifactId>
		  <version>v3-rev260-1.23.0</version>
		</dependency>

		<dependency>
		  <groupId>com.google.http-client</groupId>
		    <artifactId>google-http-client-jackson2</artifactId>
		  <version>1.23.0</version>
		</dependency>

		<dependency>
		  <groupId>com.google.oauth-client</groupId>
		    <artifactId>google-oauth-client-jetty</artifactId>
		  <version>1.23.0</version>
		</dependency>
<!-- end -->

  </dependencies>

  <!-- For use with github pages, to publish the site to the /docs subdirectory -->
  <distributionManagement>
    <site>
      <id>website</id>
      <url>file://${project.basedir}/docs/</url>
    </site>
  </distributionManagement>

  <reporting>

    <plugins>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-project-info-reports-plugin</artifactId>
	<version>2.9</version>
	<!-- SEE: https://stackoverflow.com/questions/28098566/maven-site-warning-the-repository-url-https-maven-repository-dev-java-net-no -->
	<configuration>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.0.1</version>
      </plugin>
    </plugins>

  </reporting>

  <build>
    <plugins>

      <!-- Make executable jar WITH dependencies -->
      <!-- See: https://www.baeldung.com/executable-jar-with-maven -->

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-assembly-plugin</artifactId>
	<executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <archive>
                <manifest>
		    <mainClass>${userDefinedMainClass}</mainClass>
                </manifest>
              </archive>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
            </configuration>
          </execution>
	</executions>
      </plugin>

      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>exec-maven-plugin</artifactId>
	<version>1.6.0</version>
	<executions>
	  <execution>
	    <id>my-execution</id>
	    <goals>
	      <goal>java</goal>
	    </goals>
	  </execution>
	</executions>
	<configuration>
	  <mainClass>${userDefinedMainClass}</mainClass>
	</configuration>
      </plugin>

      <plugin>
	<groupId>com.heroku.sdk</groupId>
	<artifactId>heroku-maven-plugin</artifactId>
	<version>2.0.3</version>
	<configuration>
          <jdkVersion>1.8</jdkVersion>
          <!-- Use your own application name -->
	  <!-- at Heroku CLI, use heroku apps to list, or use Heroku Dashboard -->
<<<<<<< HEAD
          <appName>${userDefinedHerokuApp}</appName>
          <processTypes>
            <!-- Tell Heroku how to launch your application -->
            <!-- You might have to remove the ./ in front   -->
						<web>java $JAVA_OPTS -jar target/${project.name}-${project.version}-jar-with-dependencies.jar</web>

=======
          <appName>ucsb-cs56-nuan-08-28-2018</appName> 
          <processTypes>
            <!-- Tell Heroku how to launch your application -->
            <!-- You might have to remove the ./ in front   -->
            <web>java $JAVA_OPS -jar target/sparkjava-demo-01-1.0-jar-with-dependencies.jar</web>
>>>>>>> 09f2e9b51c32ef361bfcc042c31deeb302e8599e
          </processTypes>
	</configuration>
      </plugin>




    </plugins>
  </build>

</project>
